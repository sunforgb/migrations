--
-- PostgreSQL database dump
--

-- Dumped from database version 14.7 (Debian 14.7-1.pgdg110+1)
-- Dumped by pg_dump version 14.7 (Debian 14.7-1.pgdg110+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpython3u; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS plpython3u WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpython3u; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpython3u IS 'PL/Python3U untrusted procedural language';


--
-- Name: employee_type; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.employee_type AS ENUM (
    'employee',
    'analyst',
    'department_dir',
    'admin'
);


ALTER TYPE public.employee_type OWNER TO postgres;

--
-- Name: create_new_department_dir(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.create_new_department_dir() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
        EXECUTE format('CREATE ROLE department_dir_%s WITH LOGIN INHERIT', NEW.id);
        EXECUTE format('GRANT department_dir TO department_dir_%s', NEW.id);
        RETURN NEW;
    END;
$$;


ALTER FUNCTION public.create_new_department_dir() OWNER TO postgres;

--
-- Name: create_new_employee(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.create_new_employee() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
        EXECUTE format('CREATE ROLE employee_%s WITH LOGIN INHERIT', NEW.id);
        EXECUTE format('GRANT employee to employee_%s', NEW.id);
        RETURN NEW;
    END;
$$;


ALTER FUNCTION public.create_new_employee() OWNER TO postgres;

--
-- Name: delete_department_dir(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.delete_department_dir() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
        EXECUTE format('DROP ROLE department_dir_%s', OLD.id);
        RETURN OLD;
    END;
$$;


ALTER FUNCTION public.delete_department_dir() OWNER TO postgres;

--
-- Name: delete_employee(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.delete_employee() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
        EXECUTE format('DROP ROLE employee_%s', OLD.id);
        RETURN OLD;
    END;
$$;


ALTER FUNCTION public.delete_employee() OWNER TO postgres;

--
-- Name: report_registration_statement(); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.report_registration_statement()
    LANGUAGE plpython3u
    AS $$
    queryTemplate = """
        COPY (SELECT * from reg_state) TO {file} CSV HEADER DELIMITER {tmp}
    """
    query = queryTemplate.format(file="'/tmp/reg_state_report.csv'", tmp="'|'")
    plan = plpy.prepare(query)
    plpy.execute(plan);
$$;


ALTER PROCEDURE public.report_registration_statement() OWNER TO postgres;

--
-- Name: report_unregistration_statement(); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.report_unregistration_statement()
    LANGUAGE plpython3u
    AS $$
    queryTemplate = """
        COPY (SELECT * from unreg_state) TO {file} CSV HEADER DELIMITER {tmp}
    """
    query = queryTemplate.format(file="'/tmp/unreg_state_report.csv'", tmp="'|'")
    plan = plpy.prepare(query)
    plpy.execute(plan)
$$;


ALTER PROCEDURE public.report_unregistration_statement() OWNER TO postgres;

--
-- Name: update_reg_status(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_reg_status(a integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
BEGIN
    BEGIN
        update api_registration_statement SET status='approved' where id=a;
        update api_migrant SET status='registered' where id=(select person_id from api_registration_statement where id=a);
        RETURN 2;
    EXCEPTION
        WHEN OTHERS THEN
            RETURN 0;
    END;
END;
$$;


ALTER FUNCTION public.update_reg_status(a integer) OWNER TO postgres;

--
-- Name: update_unreg_status(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_unreg_status(a integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
BEGIN
    BEGIN
        update api_unregistration_statement SET status='approved' where id=a;
        update api_migrant SET status='unregistered' where id=(select person_id from api_unregistration_statement where id=a);
        RETURN 2;
    EXCEPTION
        WHEN OTHERS THEN
            RETURN 0;
    END;
END;
$$;


ALTER FUNCTION public.update_unreg_status(a integer) OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: api_citizenship; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.api_citizenship (
    id bigint NOT NULL,
    name character varying(50) NOT NULL,
    code character varying(1) NOT NULL
);


ALTER TABLE public.api_citizenship OWNER TO postgres;

--
-- Name: api_citizenship_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.api_citizenship ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.api_citizenship_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: api_department; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.api_department (
    id bigint NOT NULL,
    address text NOT NULL,
    post_index character varying(6) NOT NULL,
    contact_id bigint
);


ALTER TABLE public.api_department OWNER TO postgres;

--
-- Name: api_department_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.api_department ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.api_department_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: api_doc_migr_pers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.api_doc_migr_pers (
    id bigint NOT NULL,
    serial_number character varying(20) NOT NULL,
    issued_by text NOT NULL,
    issued_when date NOT NULL,
    expires_when date
);


ALTER TABLE public.api_doc_migr_pers OWNER TO postgres;

--
-- Name: api_doc_migr_pers_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.api_doc_migr_pers ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.api_doc_migr_pers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: api_employee; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.api_employee (
    id bigint NOT NULL,
    expirience integer NOT NULL,
    salary numeric(9,2) NOT NULL,
    rank character varying(30),
    information text NOT NULL,
    contact_id bigint,
    user_id bigint
);


ALTER TABLE public.api_employee OWNER TO postgres;

--
-- Name: api_employee_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.api_employee ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.api_employee_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: api_migrant; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.api_migrant (
    id bigint NOT NULL,
    name text NOT NULL,
    address text NOT NULL,
    birthday date NOT NULL,
    birthday_place text NOT NULL,
    profession character varying(150) NOT NULL,
    citizenship_id bigint,
    contact_id bigint,
    document_id bigint,
    status character varying(15) NOT NULL
);


ALTER TABLE public.api_migrant OWNER TO postgres;

--
-- Name: api_migrant_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.api_migrant ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.api_migrant_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: api_myuser; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.api_myuser (
    id bigint NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL,
    email character varying(254) NOT NULL,
    user_type public.employee_type NOT NULL
);


ALTER TABLE public.api_myuser OWNER TO postgres;

--
-- Name: api_myuser_department; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.api_myuser_department (
    id bigint NOT NULL,
    myuser_id bigint NOT NULL,
    department_id bigint NOT NULL
);


ALTER TABLE public.api_myuser_department OWNER TO postgres;

--
-- Name: api_myuser_department_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.api_myuser_department ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.api_myuser_department_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: api_myuser_groups; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.api_myuser_groups (
    id bigint NOT NULL,
    myuser_id bigint NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.api_myuser_groups OWNER TO postgres;

--
-- Name: api_myuser_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.api_myuser_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.api_myuser_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: api_myuser_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.api_myuser ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.api_myuser_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: api_myuser_user_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.api_myuser_user_permissions (
    id bigint NOT NULL,
    myuser_id bigint NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.api_myuser_user_permissions OWNER TO postgres;

--
-- Name: api_myuser_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.api_myuser_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.api_myuser_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: api_phone; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.api_phone (
    id bigint NOT NULL,
    number character varying(11) NOT NULL
);


ALTER TABLE public.api_phone OWNER TO postgres;

--
-- Name: api_phone_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.api_phone ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.api_phone_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: api_registration_statement; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.api_registration_statement (
    id bigint NOT NULL,
    date date NOT NULL,
    department_id bigint,
    person_id bigint,
    status character varying(8) NOT NULL
);


ALTER TABLE public.api_registration_statement OWNER TO postgres;

--
-- Name: api_registration_statement_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.api_registration_statement ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.api_registration_statement_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: api_unregistration_statement; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.api_unregistration_statement (
    id bigint NOT NULL,
    date date NOT NULL,
    department_id bigint,
    person_id bigint,
    status character varying(8) NOT NULL
);


ALTER TABLE public.api_unregistration_statement OWNER TO postgres;

--
-- Name: api_unregistration_statement_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.api_unregistration_statement ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.api_unregistration_statement_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO postgres;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO postgres;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO postgres;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id bigint NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO postgres;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO postgres;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO postgres;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO postgres;

--
-- Name: reg_state; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.reg_state AS
 SELECT api_department.address,
    api_phone.number,
    count(api_registration_statement.person_id) AS count
   FROM ((public.api_registration_statement
     JOIN public.api_department ON ((api_registration_statement.department_id = api_department.id)))
     JOIN public.api_phone ON ((api_department.contact_id = api_phone.id)))
  GROUP BY api_department.address, api_phone.number;


ALTER TABLE public.reg_state OWNER TO postgres;

--
-- Name: unreg_state; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.unreg_state AS
 SELECT api_department.address,
    api_phone.number,
    count(api_unregistration_statement.person_id) AS count
   FROM ((public.api_unregistration_statement
     JOIN public.api_department ON ((api_unregistration_statement.department_id = api_department.id)))
     JOIN public.api_phone ON ((api_department.contact_id = api_phone.id)))
  GROUP BY api_department.address, api_phone.number;


ALTER TABLE public.unreg_state OWNER TO postgres;

--
-- Data for Name: api_citizenship; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.api_citizenship (id, name, code) FROM stdin;
2	Таджикистан	3
4	Кыргызстан	3
5	Турция	3
3	Узбекистан	3
6	Гондурас	3
\.


--
-- Data for Name: api_department; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.api_department (id, address, post_index, contact_id) FROM stdin;
1	Химки, ул. Молодежная, 9a	845923	2
2	Москва, Мячковский бул., 20 корпус 3	956234	3
3	Москва, проезд Серебрякова, 11	956385	4
\.


--
-- Data for Name: api_doc_migr_pers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.api_doc_migr_pers (id, serial_number, issued_by, issued_when, expires_when) FROM stdin;
1	4587129456	ГУ МВД по городу Москва	2023-06-01	2023-06-01
2	9535876125	ГУ МВД по городу Мурманск	2023-06-01	2023-06-01
3	8745734561	ГУ МВД по городу Краснодар	2023-06-01	2023-06-01
4	4585934723	ГУ МВД по городу Москва	2023-06-02	2023-06-02
5	9541675234	ГУ МВД по городу Курск	2023-06-02	2023-06-02
6	1280583725	ГУ МВД по городу Москва	2023-06-02	2023-06-02
\.


--
-- Data for Name: api_employee; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.api_employee (id, expirience, salary, rank, information, contact_id, user_id) FROM stdin;
1	2	300000.00	Генерал-полковник	Люблю быть генерал-полковником	1	3
2	2	100000.00	Лейтенант	Люблю петь и стрелять в воздух	5	30
3	3	120000.00	Лейтенант	Мое хобби - пить чай Золотая чаша	6	31
4	3	120000.00	Лейтенант	Мое хобби - смотреть телевизор	7	32
5	3	120000.00	Лейтенант	Мое хобби - пивные банки	8	33
6	4	140000.00	Лейтенант	Мое хобби - ухаживать за пенсионерами	9	34
7	4	140000.00	Лейтенант	Мое хобби - классика	10	35
8	5	300000.00	Капитан	Мое хобби - тестировать все подряд и писать отчеты	11	36
9	5	250000.00	Майор	Мне нравятся большие данные	15	37
10	1	15000.00	Майор	я Русский!	16	38
11	10	500000.00	Майор	Я лучший руководитель и баскетболист	17	39
\.


--
-- Data for Name: api_migrant; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.api_migrant (id, name, address, birthday, birthday_place, profession, citizenship_id, contact_id, document_id, status) FROM stdin;
3	Иван Надежный Иванович	Москва, улица Тверская, д 56, кв 10	2023-06-01	Таджикистан	Шиномонтажник	4	14	3	unregistered
1	Жмышенко Валерий Альбертович	Москва, Меньжинского 23, к 1	2023-06-01	Таджикистан	Дубильщик	2	12	1	registered
6	Полина Гагарина	Москва, Новый Арбат, д 32, кв 18	2023-06-02	Турция	Певица	6	20	6	registered
5	Сергей Жуков	Москва, Кутузовский проспект 18, кв 17	2023-06-02	Турция	Разнорабочий	3	19	5	registered
4	Олег Тиньков	Москва, Меньжинского 27, к 1	2023-06-02	Турция	Банкир	5	18	4	registered
2	Леонид Агутин Василич	Москва, проезд Шокальского 41, кв 15	2023-06-01	Таджикистан	Строитель	3	13	2	registered
\.


--
-- Data for Name: api_myuser; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.api_myuser (id, password, last_login, is_superuser, first_name, last_name, is_staff, is_active, date_joined, email, user_type) FROM stdin;
34	pbkdf2_sha256$390000$UYr1SmbQtnVYN50XublGKD$2IwXQRKDWZTL6ta+z6dAigjycvP5o5bHTq9ahfK9dqo=	\N	f	Максим	Галкин	f	t	2023-05-31 21:32:15.824124+00	mgalkin@mvd.ru	employee
30	pbkdf2_sha256$390000$e8Npx5bp3GgEecV8RmDySt$lgLH2jyIdph5hjsAwEDGsYI0j3QLH1NL2IHz1+DpsIw=	\N	f	Филипп	Киркоров	f	t	2023-05-31 21:32:14.347991+00	fkirkorov@mvd.ru	employee
31	pbkdf2_sha256$390000$ctJ83HrF4QoEvfmG1Ci8Ei$d+rFtM5X2vHpkjV9HxC38oFz/HP4pi8efg7q06ZH8m8=	\N	f	Николай	Басков	f	t	2023-05-31 21:32:14.71096+00	nbaskov@mvd.ru	employee
32	pbkdf2_sha256$390000$ojlrocWBLoAsTjvSPDsDYv$cMpAmq4kB6+C4M/i5ufVz1pEAox57feZURThRSF8hlk=	\N	f	Валерий	Меладзе	f	t	2023-05-31 21:32:15.074658+00	vmeladze@mvd.ru	employee
33	pbkdf2_sha256$390000$R7uZIqVZdmmbY6mI2D3eIp$r+PWJ0qMMOql8x7j72wIfMpIGyH0vo6zN+imqXyuvnA=	\N	f	Стас	Баретский	f	t	2023-05-31 21:32:15.466099+00	sbaretskii@mvd.ru	employee
35	pbkdf2_sha256$390000$uOf3r4Z9mmLHXUvahutwI5$aJ4wIqyvDJ7QbLiNZue+efTIZ2vdSEyS/NMNwPxiuBw=	\N	f	Юрий	Шатунов	f	t	2023-05-31 21:32:16.189139+00	ushatunov@mvd.ru	employee
36	pbkdf2_sha256$390000$iWwncqtuazkL6yO2i545we$BULVkxlfMPY3av/BLclI55ZYq5z8ZfJolAInS9PcfgY=	\N	f	Данила	Кузьмич	f	t	2023-05-31 21:35:32.411912+00	dkuzmich@mvd.ru	analyst
38	pbkdf2_sha256$390000$H8aGGgFfuGzrPtkRSQUmUd$C0dktyAu+hhBzsCtx9dcnpPoJ662nCe5qzFjhhSqzhU=	\N	f	Дмитрий	Баринов	f	t	2023-06-01 10:48:10.519118+00	dbarinov@mvd.ru	department_dir
3	pbkdf2_sha256$390000$8jmUBm06n1JoJoxLodOmU2$1Yuvz+dxqM0o/ru0HdcC6bS0raUPsWYodun2Pz7kzuU=	2023-06-05 21:30:11.07929+00	t	Егор	Сураев	t	t	2023-05-31 12:47:51.351684+00	esuraev@astralinux.ru	admin
39	pbkdf2_sha256$390000$j8i2m4xySKfWPTDTkfloDl$6UYfBjnqcqQ7DC50i0ur8zSrRRk8EOJnD4mW+wtJE2w=	\N	f	Андрей	Ермилов	t	t	2023-06-01 10:48:10.896473+00	aermilov@mvd.ru	department_dir
37	pbkdf2_sha256$390000$krGlHPlhfhd3xzQJfJh4OX$qGOElFemPMH76IaqC82/TMdJl4t7pTGEV+iwjNjVSSc=	\N	f	Мария	Вареца	t	t	2023-06-01 10:48:10.099787+00	mvaretsa@mvd.ru	department_dir
\.


--
-- Data for Name: api_myuser_department; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.api_myuser_department (id, myuser_id, department_id) FROM stdin;
1	30	1
2	31	1
3	32	2
4	33	2
5	34	3
6	35	3
7	36	1
8	36	2
9	36	3
12	37	1
13	38	2
14	39	3
\.


--
-- Data for Name: api_myuser_groups; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.api_myuser_groups (id, myuser_id, group_id) FROM stdin;
\.


--
-- Data for Name: api_myuser_user_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.api_myuser_user_permissions (id, myuser_id, permission_id) FROM stdin;
\.


--
-- Data for Name: api_phone; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.api_phone (id, number) FROM stdin;
1	89268861249
2	89286548347
3	89286745614
4	89279346738
5	89278884321
6	89239457128
7	89853456139
8	89676824583
9	89257592361
10	89247568247
11	89265451275
12	86457234961
13	85672398154
14	89265854723
15	86459234571
16	86548341258
17	89276541294
18	87459235715
19	88259457634
20	89276541934
\.


--
-- Data for Name: api_registration_statement; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.api_registration_statement (id, date, department_id, person_id, status) FROM stdin;
1	2023-01-11	1	1	approved
6	2023-04-06	3	6	approved
5	2023-04-03	2	5	approved
4	2023-03-06	1	4	approved
2	2022-12-07	2	2	approved
3	2023-05-03	3	3	approval
\.


--
-- Data for Name: api_unregistration_statement; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.api_unregistration_statement (id, date, department_id, person_id, status) FROM stdin;
1	2023-06-02	1	4	pending
2	2023-06-02	2	5	pending
3	2023-06-02	3	6	approval
\.


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add citizenship	1	add_citizenship
2	Can change citizenship	1	change_citizenship
3	Can delete citizenship	1	delete_citizenship
4	Can view citizenship	1	view_citizenship
5	Can add department	2	add_department
6	Can change department	2	change_department
7	Can delete department	2	delete_department
8	Can view department	2	view_department
9	Can add doc_migr_pers	3	add_doc_migr_pers
10	Can change doc_migr_pers	3	change_doc_migr_pers
11	Can delete doc_migr_pers	3	delete_doc_migr_pers
12	Can view doc_migr_pers	3	view_doc_migr_pers
13	Can add migrant	4	add_migrant
14	Can change migrant	4	change_migrant
15	Can delete migrant	4	delete_migrant
16	Can view migrant	4	view_migrant
17	Can add phone	5	add_phone
18	Can change phone	5	change_phone
19	Can delete phone	5	delete_phone
20	Can view phone	5	view_phone
21	Can add unregistration_ statement	6	add_unregistration_statement
22	Can change unregistration_ statement	6	change_unregistration_statement
23	Can delete unregistration_ statement	6	delete_unregistration_statement
24	Can view unregistration_ statement	6	view_unregistration_statement
25	Can add registration_ statement	7	add_registration_statement
26	Can change registration_ statement	7	change_registration_statement
27	Can delete registration_ statement	7	delete_registration_statement
28	Can view registration_ statement	7	view_registration_statement
29	Can add employee	8	add_employee
30	Can change employee	8	change_employee
31	Can delete employee	8	delete_employee
32	Can view employee	8	view_employee
33	Can add user	9	add_myuser
34	Can change user	9	change_myuser
35	Can delete user	9	delete_myuser
36	Can view user	9	view_myuser
37	Can add log entry	10	add_logentry
38	Can change log entry	10	change_logentry
39	Can delete log entry	10	delete_logentry
40	Can view log entry	10	view_logentry
41	Can add permission	11	add_permission
42	Can change permission	11	change_permission
43	Can delete permission	11	delete_permission
44	Can view permission	11	view_permission
45	Can add group	12	add_group
46	Can change group	12	change_group
47	Can delete group	12	delete_group
48	Can view group	12	view_group
49	Can add content type	13	add_contenttype
50	Can change content type	13	change_contenttype
51	Can delete content type	13	delete_contenttype
52	Can view content type	13	view_contenttype
53	Can add session	14	add_session
54	Can change session	14	change_session
55	Can delete session	14	delete_session
56	Can view session	14	view_session
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2023-05-31 13:15:12.757226+00	1	Phone object (1)	1	[{"added": {}}]	5	3
2	2023-05-31 13:15:53.166254+00	1	Employee object (1)	1	[{"added": {}}]	8	3
3	2023-05-31 13:19:18.037805+00	2	89286548347	1	[{"added": {}}]	5	3
4	2023-05-31 13:19:28.830726+00	3	89286745614	1	[{"added": {}}]	5	3
5	2023-05-31 13:19:37.922065+00	4	89279346738	1	[{"added": {}}]	5	3
6	2023-05-31 13:20:16.947055+00	1	Department object (1)	1	[{"added": {}}]	2	3
7	2023-05-31 13:20:40.991217+00	2	Department object (2)	1	[{"added": {}}]	2	3
8	2023-05-31 13:20:59.524051+00	3	Department object (3)	1	[{"added": {}}]	2	3
9	2023-05-31 16:02:20.645724+00	3	esuraev@astralinux.ru	2	[{"changed": {"fields": ["First name", "Last name"]}}]	9	3
10	2023-05-31 17:40:46.372293+00	4	test@test.com	1	[{"added": {}}]	9	3
11	2023-05-31 17:40:58.333281+00	4	test@test.com	3		9	3
12	2023-05-31 17:41:22.828049+00	5	test@test.com	1	[{"added": {}}]	9	3
13	2023-05-31 17:41:29.878666+00	5	test@test.com	3		9	3
14	2023-05-31 21:25:59.261805+00	6	fkirkorov@mvd.ru	3		9	3
15	2023-05-31 21:25:59.265542+00	10	mgalkin@mvd.ru	3		9	3
16	2023-05-31 21:25:59.268288+00	7	nbaskov@mvd.ru	3		9	3
17	2023-05-31 21:25:59.270903+00	9	sbaretskii@mvd.ru	3		9	3
18	2023-05-31 21:25:59.273215+00	11	ushatunov@mvd.ru	3		9	3
19	2023-05-31 21:25:59.275594+00	8	vmeladze@mvd.ru	3		9	3
20	2023-05-31 21:27:21.458259+00	12	fkirkorov@mvd.ru	3		9	3
21	2023-05-31 21:27:21.462785+00	16	mgalkin@mvd.ru	3		9	3
22	2023-05-31 21:27:21.465907+00	13	nbaskov@mvd.ru	3		9	3
23	2023-05-31 21:27:21.470405+00	15	sbaretskii@mvd.ru	3		9	3
24	2023-05-31 21:27:21.476757+00	17	ushatunov@mvd.ru	3		9	3
25	2023-05-31 21:27:21.47935+00	14	vmeladze@mvd.ru	3		9	3
26	2023-05-31 21:28:43.990158+00	18	fkirkorov@mvd.ru	3		9	3
27	2023-05-31 21:28:43.99626+00	22	mgalkin@mvd.ru	3		9	3
28	2023-05-31 21:28:44.000579+00	19	nbaskov@mvd.ru	3		9	3
29	2023-05-31 21:28:44.0044+00	21	sbaretskii@mvd.ru	3		9	3
30	2023-05-31 21:28:44.00885+00	23	ushatunov@mvd.ru	3		9	3
31	2023-05-31 21:28:44.016455+00	20	vmeladze@mvd.ru	3		9	3
32	2023-05-31 21:29:19.10689+00	24	fkirkorov@mvd.ru	3		9	3
33	2023-05-31 21:29:19.113335+00	25	nbaskov@mvd.ru	3		9	3
34	2023-05-31 21:29:36.933862+00	26	fkirkorov@mvd.ru	3		9	3
35	2023-05-31 21:29:36.937748+00	27	nbaskov@mvd.ru	3		9	3
36	2023-05-31 21:32:10.456821+00	28	fkirkorov@mvd.ru	3		9	3
37	2023-05-31 21:32:10.46391+00	29	nbaskov@mvd.ru	3		9	3
38	2023-06-01 09:52:25.156236+00	1	Registration_Statement object (1)	1	[{"added": {}}]	7	3
39	2023-06-01 09:52:34.599286+00	2	Registration_Statement object (2)	1	[{"added": {}}]	7	3
40	2023-06-01 09:52:44.896603+00	3	Registration_Statement object (3)	1	[{"added": {}}]	7	3
41	2023-06-02 07:57:56.433286+00	4	Registration_Statement object (4)	1	[{"added": {}}]	7	3
42	2023-06-02 07:58:04.895618+00	5	Registration_Statement object (5)	1	[{"added": {}}]	7	3
43	2023-06-02 07:58:18.991744+00	6	Registration_Statement object (6)	1	[{"added": {}}]	7	3
44	2023-06-02 07:58:25.096559+00	5	Registration_Statement object (5)	2	[{"changed": {"fields": ["\\u0414\\u0430\\u0442\\u0430 \\u0437\\u0430\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u044f \\u0434\\u043e\\u043a\\u0443\\u043c\\u0435\\u043d\\u0442\\u0430"]}}]	7	3
45	2023-06-02 07:58:31.805682+00	4	Registration_Statement object (4)	2	[{"changed": {"fields": ["\\u0414\\u0430\\u0442\\u0430 \\u0437\\u0430\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u044f \\u0434\\u043e\\u043a\\u0443\\u043c\\u0435\\u043d\\u0442\\u0430"]}}]	7	3
46	2023-06-02 07:58:36.862404+00	3	Registration_Statement object (3)	2	[{"changed": {"fields": ["\\u0414\\u0430\\u0442\\u0430 \\u0437\\u0430\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u044f \\u0434\\u043e\\u043a\\u0443\\u043c\\u0435\\u043d\\u0442\\u0430"]}}]	7	3
47	2023-06-02 07:58:42.780599+00	2	Registration_Statement object (2)	2	[{"changed": {"fields": ["\\u0414\\u0430\\u0442\\u0430 \\u0437\\u0430\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u044f \\u0434\\u043e\\u043a\\u0443\\u043c\\u0435\\u043d\\u0442\\u0430"]}}]	7	3
48	2023-06-02 07:58:48.090499+00	1	Registration_Statement object (1)	2	[{"changed": {"fields": ["\\u0414\\u0430\\u0442\\u0430 \\u0437\\u0430\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u044f \\u0434\\u043e\\u043a\\u0443\\u043c\\u0435\\u043d\\u0442\\u0430"]}}]	7	3
49	2023-06-02 07:58:56.356055+00	6	Registration_Statement object (6)	2	[{"changed": {"fields": ["Status"]}}]	7	3
50	2023-06-02 07:59:02.093569+00	5	Registration_Statement object (5)	2	[{"changed": {"fields": ["Status"]}}]	7	3
51	2023-06-02 07:59:05.298792+00	4	Registration_Statement object (4)	2	[{"changed": {"fields": ["Status"]}}]	7	3
52	2023-06-02 07:59:17.201489+00	1	Unregistration_Statement object (1)	1	[{"added": {}}]	6	3
53	2023-06-02 07:59:24.415953+00	2	Unregistration_Statement object (2)	1	[{"added": {}}]	6	3
54	2023-06-02 07:59:30.530128+00	3	Unregistration_Statement object (3)	1	[{"added": {}}]	6	3
55	2023-06-05 21:48:09.613965+00	39	aermilov@mvd.ru	2	[{"changed": {"fields": ["Staff status"]}}]	9	3
56	2023-06-05 21:48:15.612585+00	37	mvaretsa@mvd.ru	2	[{"changed": {"fields": ["Staff status"]}}]	9	3
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	api	citizenship
2	api	department
3	api	doc_migr_pers
4	api	migrant
5	api	phone
6	api	unregistration_statement
7	api	registration_statement
8	api	employee
9	api	myuser
10	admin	logentry
11	auth	permission
12	auth	group
13	contenttypes	contenttype
14	sessions	session
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2023-05-30 13:18:43.507005+00
2	contenttypes	0002_remove_content_type_name	2023-05-30 13:18:43.524672+00
3	auth	0001_initial	2023-05-30 13:18:43.606709+00
4	auth	0002_alter_permission_name_max_length	2023-05-30 13:18:43.616388+00
5	auth	0003_alter_user_email_max_length	2023-05-30 13:18:43.627889+00
6	auth	0004_alter_user_username_opts	2023-05-30 13:18:43.64003+00
7	auth	0005_alter_user_last_login_null	2023-05-30 13:18:43.650083+00
8	auth	0006_require_contenttypes_0002	2023-05-30 13:18:43.655358+00
9	auth	0007_alter_validators_add_error_messages	2023-05-30 13:18:43.666904+00
10	auth	0008_alter_user_username_max_length	2023-05-30 13:18:43.678883+00
11	auth	0009_alter_user_last_name_max_length	2023-05-30 13:18:43.688149+00
12	auth	0010_alter_group_name_max_length	2023-05-30 13:18:43.710461+00
13	auth	0011_update_proxy_permissions	2023-05-30 13:18:43.71871+00
14	auth	0012_alter_user_first_name_max_length	2023-05-30 13:18:43.729355+00
15	api	0001_initial	2023-05-30 13:18:44.082242+00
16	admin	0001_initial	2023-05-30 13:18:44.160194+00
17	admin	0002_logentry_remove_auto_add	2023-05-30 13:18:44.175411+00
18	admin	0003_logentry_add_action_flag_choices	2023-05-30 13:18:44.189939+00
19	sessions	0001_initial	2023-05-30 13:18:44.231122+00
20	api	0002_remove_myuser_user_type	2023-05-30 13:44:30.255875+00
21	api	0003_myuser_user_type	2023-05-30 13:44:30.279993+00
22	api	0004_employee_user	2023-05-31 13:02:19.764045+00
23	api	0005_citizenship_code	2023-05-31 14:21:56.265832+00
24	api	0006_migrant_status	2023-05-31 14:32:06.918009+00
25	api	0007_registration_statement_status_and_more	2023-05-31 16:01:44.259109+00
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
qciwbsd6t3lknxxxregnea9gwtzywpaa	.eJxVjEEOwiAQRe_C2hAmwAAu3XsGMsAoVQNJaVeNd9cmXej2v_f-JiKtS43r4DlORZyFFqffLVF-cttBeVC7d5l7W-YpyV2RBx3y2gu_Lof7d1Bp1G-tdGKtOVnjlEoajNHgClkHhTAoTwSMFjOi80UxOMsQbj4HNh7ZK_H-AMR7Nxc:1q6HmF:yF871T-QmcXGf-ZS-H-LAI_fsC-q1UUt7j5vp4SGz6g	2023-06-19 21:30:11.099133+00
\.


--
-- Name: api_citizenship_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.api_citizenship_id_seq', 6, true);


--
-- Name: api_department_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.api_department_id_seq', 3, true);


--
-- Name: api_doc_migr_pers_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.api_doc_migr_pers_id_seq', 6, true);


--
-- Name: api_employee_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.api_employee_id_seq', 11, true);


--
-- Name: api_migrant_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.api_migrant_id_seq', 6, true);


--
-- Name: api_myuser_department_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.api_myuser_department_id_seq', 14, true);


--
-- Name: api_myuser_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.api_myuser_groups_id_seq', 1, false);


--
-- Name: api_myuser_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.api_myuser_id_seq', 39, true);


--
-- Name: api_myuser_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.api_myuser_user_permissions_id_seq', 1, false);


--
-- Name: api_phone_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.api_phone_id_seq', 20, true);


--
-- Name: api_registration_statement_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.api_registration_statement_id_seq', 6, true);


--
-- Name: api_unregistration_statement_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.api_unregistration_statement_id_seq', 3, true);


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 56, true);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 56, true);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 14, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 25, true);


--
-- Name: api_citizenship api_citizenship_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_citizenship
    ADD CONSTRAINT api_citizenship_name_key UNIQUE (name);


--
-- Name: api_citizenship api_citizenship_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_citizenship
    ADD CONSTRAINT api_citizenship_pkey PRIMARY KEY (id);


--
-- Name: api_department api_department_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_department
    ADD CONSTRAINT api_department_pkey PRIMARY KEY (id);


--
-- Name: api_doc_migr_pers api_doc_migr_pers_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_doc_migr_pers
    ADD CONSTRAINT api_doc_migr_pers_pkey PRIMARY KEY (id);


--
-- Name: api_doc_migr_pers api_doc_migr_pers_serial_number_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_doc_migr_pers
    ADD CONSTRAINT api_doc_migr_pers_serial_number_key UNIQUE (serial_number);


--
-- Name: api_employee api_employee_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_employee
    ADD CONSTRAINT api_employee_pkey PRIMARY KEY (id);


--
-- Name: api_migrant api_migrant_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_migrant
    ADD CONSTRAINT api_migrant_pkey PRIMARY KEY (id);


--
-- Name: api_myuser_department api_myuser_department_myuser_id_department_id_4c3d665e_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_myuser_department
    ADD CONSTRAINT api_myuser_department_myuser_id_department_id_4c3d665e_uniq UNIQUE (myuser_id, department_id);


--
-- Name: api_myuser_department api_myuser_department_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_myuser_department
    ADD CONSTRAINT api_myuser_department_pkey PRIMARY KEY (id);


--
-- Name: api_myuser api_myuser_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_myuser
    ADD CONSTRAINT api_myuser_email_key UNIQUE (email);


--
-- Name: api_myuser_groups api_myuser_groups_myuser_id_group_id_dd0fa6e8_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_myuser_groups
    ADD CONSTRAINT api_myuser_groups_myuser_id_group_id_dd0fa6e8_uniq UNIQUE (myuser_id, group_id);


--
-- Name: api_myuser_groups api_myuser_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_myuser_groups
    ADD CONSTRAINT api_myuser_groups_pkey PRIMARY KEY (id);


--
-- Name: api_myuser api_myuser_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_myuser
    ADD CONSTRAINT api_myuser_pkey PRIMARY KEY (id);


--
-- Name: api_myuser_user_permissions api_myuser_user_permissi_myuser_id_permission_id_a1ffa2cd_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_myuser_user_permissions
    ADD CONSTRAINT api_myuser_user_permissi_myuser_id_permission_id_a1ffa2cd_uniq UNIQUE (myuser_id, permission_id);


--
-- Name: api_myuser_user_permissions api_myuser_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_myuser_user_permissions
    ADD CONSTRAINT api_myuser_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: api_phone api_phone_number_25485db2_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_phone
    ADD CONSTRAINT api_phone_number_25485db2_uniq UNIQUE (number);


--
-- Name: api_phone api_phone_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_phone
    ADD CONSTRAINT api_phone_pkey PRIMARY KEY (id);


--
-- Name: api_registration_statement api_registration_statement_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_registration_statement
    ADD CONSTRAINT api_registration_statement_pkey PRIMARY KEY (id);


--
-- Name: api_unregistration_statement api_unregistration_statement_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_unregistration_statement
    ADD CONSTRAINT api_unregistration_statement_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: api_citizenship_name_2d88ca67_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX api_citizenship_name_2d88ca67_like ON public.api_citizenship USING btree (name varchar_pattern_ops);


--
-- Name: api_department_contact_id_d4cb5361; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX api_department_contact_id_d4cb5361 ON public.api_department USING btree (contact_id);


--
-- Name: api_doc_migr_pers_serial_number_73b7d96b_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX api_doc_migr_pers_serial_number_73b7d96b_like ON public.api_doc_migr_pers USING btree (serial_number varchar_pattern_ops);


--
-- Name: api_employee_contact_id_b9234113; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX api_employee_contact_id_b9234113 ON public.api_employee USING btree (contact_id);


--
-- Name: api_employee_user_id_ed8ba4e1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX api_employee_user_id_ed8ba4e1 ON public.api_employee USING btree (user_id);


--
-- Name: api_migrant_citizenship_id_3a5b51cc; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX api_migrant_citizenship_id_3a5b51cc ON public.api_migrant USING btree (citizenship_id);


--
-- Name: api_migrant_contact_id_62c235bb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX api_migrant_contact_id_62c235bb ON public.api_migrant USING btree (contact_id);


--
-- Name: api_migrant_document_id_7bf6e9cd; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX api_migrant_document_id_7bf6e9cd ON public.api_migrant USING btree (document_id);


--
-- Name: api_myuser_department_department_id_c14bb108; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX api_myuser_department_department_id_c14bb108 ON public.api_myuser_department USING btree (department_id);


--
-- Name: api_myuser_department_myuser_id_a0efb60e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX api_myuser_department_myuser_id_a0efb60e ON public.api_myuser_department USING btree (myuser_id);


--
-- Name: api_myuser_email_9dbb756a_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX api_myuser_email_9dbb756a_like ON public.api_myuser USING btree (email varchar_pattern_ops);


--
-- Name: api_myuser_groups_group_id_242b80d7; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX api_myuser_groups_group_id_242b80d7 ON public.api_myuser_groups USING btree (group_id);


--
-- Name: api_myuser_groups_myuser_id_7cb4c860; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX api_myuser_groups_myuser_id_7cb4c860 ON public.api_myuser_groups USING btree (myuser_id);


--
-- Name: api_myuser_user_permissions_myuser_id_f38f1863; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX api_myuser_user_permissions_myuser_id_f38f1863 ON public.api_myuser_user_permissions USING btree (myuser_id);


--
-- Name: api_myuser_user_permissions_permission_id_10482570; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX api_myuser_user_permissions_permission_id_10482570 ON public.api_myuser_user_permissions USING btree (permission_id);


--
-- Name: api_phone_number_25485db2_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX api_phone_number_25485db2_like ON public.api_phone USING btree (number varchar_pattern_ops);


--
-- Name: api_registration_statement_department_id_0e35908d; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX api_registration_statement_department_id_0e35908d ON public.api_registration_statement USING btree (department_id);


--
-- Name: api_registration_statement_person_id_9d977e1a; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX api_registration_statement_person_id_9d977e1a ON public.api_registration_statement USING btree (person_id);


--
-- Name: api_unregistration_statement_department_id_51d0ef6b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX api_unregistration_statement_department_id_51d0ef6b ON public.api_unregistration_statement USING btree (department_id);


--
-- Name: api_unregistration_statement_person_id_3d9c5225; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX api_unregistration_statement_person_id_3d9c5225 ON public.api_unregistration_statement USING btree (person_id);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: api_myuser create_new_department_dir; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER create_new_department_dir AFTER INSERT ON public.api_myuser FOR EACH ROW WHEN ((new.user_type = 'department_dir'::public.employee_type)) EXECUTE FUNCTION public.create_new_department_dir();


--
-- Name: api_myuser create_new_employee; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER create_new_employee AFTER INSERT ON public.api_myuser FOR EACH ROW WHEN ((new.user_type = 'employee'::public.employee_type)) EXECUTE FUNCTION public.create_new_employee();


--
-- Name: api_myuser delete_department_dir; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER delete_department_dir BEFORE DELETE ON public.api_myuser FOR EACH ROW WHEN ((old.user_type = 'department_dir'::public.employee_type)) EXECUTE FUNCTION public.delete_department_dir();


--
-- Name: api_myuser delete_employee; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER delete_employee BEFORE DELETE ON public.api_myuser FOR EACH ROW WHEN ((old.user_type = 'employee'::public.employee_type)) EXECUTE FUNCTION public.delete_employee();


--
-- Name: api_department api_department_contact_id_d4cb5361_fk_api_phone_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_department
    ADD CONSTRAINT api_department_contact_id_d4cb5361_fk_api_phone_id FOREIGN KEY (contact_id) REFERENCES public.api_phone(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_employee api_employee_contact_id_b9234113_fk_api_phone_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_employee
    ADD CONSTRAINT api_employee_contact_id_b9234113_fk_api_phone_id FOREIGN KEY (contact_id) REFERENCES public.api_phone(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_employee api_employee_user_id_ed8ba4e1_fk_api_myuser_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_employee
    ADD CONSTRAINT api_employee_user_id_ed8ba4e1_fk_api_myuser_id FOREIGN KEY (user_id) REFERENCES public.api_myuser(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_migrant api_migrant_citizenship_id_3a5b51cc_fk_api_citizenship_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_migrant
    ADD CONSTRAINT api_migrant_citizenship_id_3a5b51cc_fk_api_citizenship_id FOREIGN KEY (citizenship_id) REFERENCES public.api_citizenship(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_migrant api_migrant_contact_id_62c235bb_fk_api_phone_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_migrant
    ADD CONSTRAINT api_migrant_contact_id_62c235bb_fk_api_phone_id FOREIGN KEY (contact_id) REFERENCES public.api_phone(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_migrant api_migrant_document_id_7bf6e9cd_fk_api_doc_migr_pers_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_migrant
    ADD CONSTRAINT api_migrant_document_id_7bf6e9cd_fk_api_doc_migr_pers_id FOREIGN KEY (document_id) REFERENCES public.api_doc_migr_pers(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_myuser_department api_myuser_departmen_department_id_c14bb108_fk_api_depar; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_myuser_department
    ADD CONSTRAINT api_myuser_departmen_department_id_c14bb108_fk_api_depar FOREIGN KEY (department_id) REFERENCES public.api_department(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_myuser_department api_myuser_department_myuser_id_a0efb60e_fk_api_myuser_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_myuser_department
    ADD CONSTRAINT api_myuser_department_myuser_id_a0efb60e_fk_api_myuser_id FOREIGN KEY (myuser_id) REFERENCES public.api_myuser(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_myuser_groups api_myuser_groups_group_id_242b80d7_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_myuser_groups
    ADD CONSTRAINT api_myuser_groups_group_id_242b80d7_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_myuser_groups api_myuser_groups_myuser_id_7cb4c860_fk_api_myuser_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_myuser_groups
    ADD CONSTRAINT api_myuser_groups_myuser_id_7cb4c860_fk_api_myuser_id FOREIGN KEY (myuser_id) REFERENCES public.api_myuser(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_myuser_user_permissions api_myuser_user_perm_permission_id_10482570_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_myuser_user_permissions
    ADD CONSTRAINT api_myuser_user_perm_permission_id_10482570_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_myuser_user_permissions api_myuser_user_permissions_myuser_id_f38f1863_fk_api_myuser_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_myuser_user_permissions
    ADD CONSTRAINT api_myuser_user_permissions_myuser_id_f38f1863_fk_api_myuser_id FOREIGN KEY (myuser_id) REFERENCES public.api_myuser(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_registration_statement api_registration_sta_department_id_0e35908d_fk_api_depar; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_registration_statement
    ADD CONSTRAINT api_registration_sta_department_id_0e35908d_fk_api_depar FOREIGN KEY (department_id) REFERENCES public.api_department(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_registration_statement api_registration_statement_person_id_9d977e1a_fk_api_migrant_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_registration_statement
    ADD CONSTRAINT api_registration_statement_person_id_9d977e1a_fk_api_migrant_id FOREIGN KEY (person_id) REFERENCES public.api_migrant(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_unregistration_statement api_unregistration_s_department_id_51d0ef6b_fk_api_depar; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_unregistration_statement
    ADD CONSTRAINT api_unregistration_s_department_id_51d0ef6b_fk_api_depar FOREIGN KEY (department_id) REFERENCES public.api_department(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_unregistration_statement api_unregistration_s_person_id_3d9c5225_fk_api_migra; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_unregistration_statement
    ADD CONSTRAINT api_unregistration_s_person_id_3d9c5225_fk_api_migra FOREIGN KEY (person_id) REFERENCES public.api_migrant(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_api_myuser_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_api_myuser_id FOREIGN KEY (user_id) REFERENCES public.api_myuser(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_myuser; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.api_myuser ENABLE ROW LEVEL SECURITY;

--
-- Name: api_registration_statement; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.api_registration_statement ENABLE ROW LEVEL SECURITY;

--
-- Name: api_unregistration_statement; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.api_unregistration_statement ENABLE ROW LEVEL SECURITY;

--
-- Name: api_registration_statement employee_registr_state; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY employee_registr_state ON public.api_registration_statement USING (((department_id IN ( SELECT api_myuser_department.department_id
   FROM public.api_myuser_department
  WHERE ("substring"((CURRENT_USER)::text, '[0-9]+'::text) = (api_myuser_department.myuser_id)::text))) OR (CURRENT_USER ~~ 'analyst'::text)));


--
-- Name: api_unregistration_statement employee_unregistr_state; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY employee_unregistr_state ON public.api_unregistration_statement USING (((department_id IN ( SELECT api_myuser_department.department_id
   FROM public.api_myuser_department
  WHERE ("substring"((CURRENT_USER)::text, '[0-9]+'::text) = (api_myuser_department.myuser_id)::text))) OR (CURRENT_USER ~~ 'analyst'::text)));


--
-- Name: TABLE api_citizenship; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.api_citizenship TO employee;
GRANT SELECT ON TABLE public.api_citizenship TO analyst;


--
-- Name: TABLE api_department; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.api_department TO employee;
GRANT SELECT ON TABLE public.api_department TO analyst;


--
-- Name: TABLE api_doc_migr_pers; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.api_doc_migr_pers TO employee;
GRANT INSERT ON TABLE public.api_doc_migr_pers TO department_dir;
GRANT SELECT ON TABLE public.api_doc_migr_pers TO analyst;


--
-- Name: TABLE api_employee; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.api_employee TO department_dir;
GRANT SELECT ON TABLE public.api_employee TO analyst;


--
-- Name: TABLE api_migrant; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.api_migrant TO employee;
GRANT INSERT ON TABLE public.api_migrant TO department_dir;
GRANT SELECT ON TABLE public.api_migrant TO analyst;


--
-- Name: TABLE api_myuser; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.api_myuser TO employee;
GRANT SELECT ON TABLE public.api_myuser TO analyst;


--
-- Name: TABLE api_myuser_department; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.api_myuser_department TO employee;
GRANT SELECT ON TABLE public.api_myuser_department TO analyst;


--
-- Name: TABLE api_myuser_user_permissions; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.api_myuser_user_permissions TO department_dir;


--
-- Name: TABLE api_phone; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.api_phone TO employee;
GRANT INSERT ON TABLE public.api_phone TO department_dir;
GRANT SELECT ON TABLE public.api_phone TO analyst;


--
-- Name: TABLE api_registration_statement; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT,UPDATE ON TABLE public.api_registration_statement TO employee;
GRANT INSERT,UPDATE ON TABLE public.api_registration_statement TO department_dir;
GRANT SELECT ON TABLE public.api_registration_statement TO analyst;


--
-- Name: TABLE api_unregistration_statement; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT,UPDATE ON TABLE public.api_unregistration_statement TO employee;
GRANT INSERT,UPDATE ON TABLE public.api_unregistration_statement TO department_dir;
GRANT SELECT ON TABLE public.api_unregistration_statement TO analyst;


--
-- Name: TABLE auth_permission; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.auth_permission TO department_dir;


--
-- Name: TABLE django_session; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.django_session TO department_dir;
GRANT SELECT ON TABLE public.django_session TO employee;


--
-- PostgreSQL database dump complete
--

